// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Repository.Models;

namespace Repository.DBContext;

public partial class InnerChildExeContext : DbContext
{
    public InnerChildExeContext()
    {
    }

    public InnerChildExeContext(DbContextOptions<InnerChildExeContext> options)
        : base(options)
    {
    }

    public virtual DbSet<AichatMessage> AichatMessages { get; set; }

    public virtual DbSet<AichatSession> AichatSessions { get; set; }

    public virtual DbSet<Article> Articles { get; set; }

    public virtual DbSet<Audio> Audios { get; set; }

    public virtual DbSet<AudioCategory> AudioCategories { get; set; }

    public virtual DbSet<CommunityMember> CommunityMembers { get; set; }

    public virtual DbSet<CommunityPost> CommunityPosts { get; set; }

    public virtual DbSet<Goal> Goals { get; set; }

    public virtual DbSet<Habit> Habits { get; set; }

    public virtual DbSet<Help> Helps { get; set; }

    public virtual DbSet<HelpCategory> HelpCategories { get; set; }

    public virtual DbSet<MoodJournal> MoodJournals { get; set; }

    public virtual DbSet<MoodJournalType> MoodJournalTypes { get; set; }

    public virtual DbSet<Notification> Notifications { get; set; }

    public virtual DbSet<Profile> Profiles { get; set; }

    public virtual DbSet<Purchase> Purchases { get; set; }

    public virtual DbSet<Quiz> Quizzes { get; set; }

    public virtual DbSet<QuizAnswerOption> QuizAnswerOptions { get; set; }

    public virtual DbSet<QuizCategory> QuizCategories { get; set; }

    public virtual DbSet<QuizQuestion> QuizQuestions { get; set; }

    public virtual DbSet<QuizUserAnswer> QuizUserAnswers { get; set; }

    public virtual DbSet<QuizUserAttempt> QuizUserAttempts { get; set; }

    public virtual DbSet<QuizUserResult> QuizUserResults { get; set; }

    public virtual DbSet<RefreshToken> RefreshTokens { get; set; }

    public virtual DbSet<Role> Roles { get; set; }

    public virtual DbSet<Session> Sessions { get; set; }

    public virtual DbSet<SubAudioCategory> SubAudioCategories { get; set; }

    public virtual DbSet<Subscription> Subscriptions { get; set; }

    public virtual DbSet<Transaction> Transactions { get; set; }

    public virtual DbSet<User> Users { get; set; }

    public virtual DbSet<UserCommunity> UserCommunities { get; set; }

//    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
//#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
//        => optionsBuilder.UseSqlServer("Data Source=InnerChild2.mssql.somee.com;Initial Catalog=InnerChild2;User ID=vlenka10204_SQLLogin_1;Password=tcdosmuhr6");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<AichatMessage>(entity =>
        {
            entity.HasKey(e => e.AichatMessageId).HasName("PK__AIChatMe__C47E9CB35193C326");

            entity.ToTable("AIChatMessage");

            entity.Property(e => e.AichatMessageId)
                .HasMaxLength(50)
                .HasColumnName("AIChatMessageId");
            entity.Property(e => e.AichatMessageContent).HasColumnName("AIChatMessageContent");
            entity.Property(e => e.AichatMessageSenderType)
                .HasMaxLength(20)
                .HasColumnName("AIChatMessageSenderType");
            entity.Property(e => e.AichatMessageSentAt)
                .HasColumnType("datetime")
                .HasColumnName("AIChatMessageSentAt");
            entity.Property(e => e.AichatSessionId)
                .HasMaxLength(50)
                .HasColumnName("AIChatSessionId");

            entity.HasOne(d => d.AichatSession).WithMany(p => p.AichatMessages)
                .HasForeignKey(d => d.AichatSessionId)
                .HasConstraintName("FK__AIChatMes__AICha__74AE54BC");
        });

        modelBuilder.Entity<AichatSession>(entity =>
        {
            entity.HasKey(e => e.AichatSessionId).HasName("PK__AIChatSe__96B1B9FC11215B26");

            entity.ToTable("AIChatSession");

            entity.Property(e => e.AichatSessionId)
                .HasMaxLength(50)
                .HasColumnName("AIChatSessionId");
            entity.Property(e => e.AichatSessionCreatedAt)
                .HasColumnType("datetime")
                .HasColumnName("AIChatSessionCreatedAt");
            entity.Property(e => e.AichatSessionTitle)
                .HasMaxLength(255)
                .HasColumnName("AIChatSessionTitle");
            entity.Property(e => e.ProfileId).HasMaxLength(50);

            entity.HasOne(d => d.Profile).WithMany(p => p.AichatSessions)
                .HasForeignKey(d => d.ProfileId)
                .HasConstraintName("FK__AIChatSes__Profi__71D1E811");
        });

        modelBuilder.Entity<Article>(entity =>
        {
            entity.HasKey(e => e.ArticleId).HasName("PK__Article__9C6270E87C8A92EB");

            entity.ToTable("Article");

            entity.Property(e => e.ArticleId).HasMaxLength(50);
            entity.Property(e => e.ArticleDescription).HasMaxLength(255);
            entity.Property(e => e.ArticleName).HasMaxLength(100);
            entity.Property(e => e.ArticleUrl)
                .HasMaxLength(255)
                .HasColumnName("ArticleURL");
        });

        modelBuilder.Entity<Audio>(entity =>
        {
            entity.HasKey(e => e.AudioId).HasName("PK__Audio__A28A94502F264DAF");

            entity.ToTable("Audio");

            entity.Property(e => e.AudioId).HasMaxLength(50);
            entity.Property(e => e.AudioCreatedAt).HasColumnType("datetime");
            entity.Property(e => e.AudioStatus).HasMaxLength(20);
            entity.Property(e => e.AudioThumbnail).HasMaxLength(255);
            entity.Property(e => e.AudioTitle).HasMaxLength(100);
            entity.Property(e => e.AudioUrl)
                .HasMaxLength(255)
                .HasColumnName("AudioURL");
            entity.Property(e => e.SubAudioCategoryId).HasMaxLength(50);

            entity.HasOne(d => d.SubAudioCategory).WithMany(p => p.Audios)
                .HasForeignKey(d => d.SubAudioCategoryId)
                .HasConstraintName("FK__Audio__SubAudioC__02084FDA");
        });

        modelBuilder.Entity<AudioCategory>(entity =>
        {
            entity.HasKey(e => e.AudioCategoryId).HasName("PK__AudioCat__B3B4EAFB090F78D1");

            entity.ToTable("AudioCategory");

            entity.Property(e => e.AudioCategoryId).HasMaxLength(50);
            entity.Property(e => e.AudioCategoryName).HasMaxLength(100);
        });

        modelBuilder.Entity<CommunityMember>(entity =>
        {
            entity.HasKey(e => e.CommunityMemberId).HasName("PK__Communit__F315FAD6A67F2B44");

            entity.ToTable("CommunityMember");

            entity.Property(e => e.CommunityMemberId).HasMaxLength(50);
            entity.Property(e => e.CommunityGroupId).HasMaxLength(50);
            entity.Property(e => e.CommunityMemberStatus).HasMaxLength(20);
            entity.Property(e => e.ProfileId).HasMaxLength(50);

            entity.HasOne(d => d.CommunityGroup).WithMany(p => p.CommunityMembers)
                .HasForeignKey(d => d.CommunityGroupId)
                .HasConstraintName("FK__Community__Commu__0D7A0286");

            entity.HasOne(d => d.Profile).WithMany(p => p.CommunityMembers)
                .HasForeignKey(d => d.ProfileId)
                .HasConstraintName("FK__Community__Profi__0E6E26BF");
        });

        modelBuilder.Entity<CommunityPost>(entity =>
        {
            entity.HasKey(e => e.CommunityPostId).HasName("PK__Communit__9A60257EAA1AAAE1");

            entity.ToTable("CommunityPost");

            entity.Property(e => e.CommunityPostId).HasMaxLength(50);
            entity.Property(e => e.CommunityGroupId).HasMaxLength(50);
            entity.Property(e => e.CommunityPostCreatedAt).HasColumnType("datetime");
            entity.Property(e => e.CommunityPostImageUrl).HasMaxLength(255);
            entity.Property(e => e.CommunityPostStatus).HasMaxLength(20);
            entity.Property(e => e.CommunityPostTitle).HasMaxLength(100);
            entity.Property(e => e.ProfileId).HasMaxLength(50);

            entity.HasOne(d => d.CommunityGroup).WithMany(p => p.CommunityPosts)
                .HasForeignKey(d => d.CommunityGroupId)
                .HasConstraintName("FK__Community__Commu__114A936A");

            entity.HasOne(d => d.Profile).WithMany(p => p.CommunityPosts)
                .HasForeignKey(d => d.ProfileId)
                .HasConstraintName("FK__Community__Profi__123EB7A3");
        });

        modelBuilder.Entity<Goal>(entity =>
        {
            entity.HasKey(e => e.GoalId).HasName("PK__Goal__8A4FFFD1C2EB2C1C");

            entity.ToTable("Goal");

            entity.Property(e => e.GoalId).HasMaxLength(50);
            entity.Property(e => e.GoalCompletedAt).HasColumnType("datetime");
            entity.Property(e => e.GoalCreatedAt).HasColumnType("datetime");
            entity.Property(e => e.GoalDescription).HasMaxLength(255);
            entity.Property(e => e.GoalEndDate).HasColumnType("datetime");
            entity.Property(e => e.GoalStartDate).HasColumnType("datetime");
            entity.Property(e => e.GoalStatus).HasMaxLength(20);
            entity.Property(e => e.GoalTitle).HasMaxLength(100);
            entity.Property(e => e.GoalType).HasMaxLength(50);
            entity.Property(e => e.GoalUpdatedAt).HasColumnType("datetime");
            entity.Property(e => e.ProfileId).HasMaxLength(50);

            entity.HasOne(d => d.Profile).WithMany(p => p.Goals)
                .HasForeignKey(d => d.ProfileId)
                .HasConstraintName("FK__Goal__ProfileId__6EF57B66");
        });

        modelBuilder.Entity<Habit>(entity =>
        {
            entity.HasKey(e => e.HabitId).HasName("PK__Habit__C587AF630BB078F3");

            entity.ToTable("Habit");

            entity.Property(e => e.HabitId).HasMaxLength(50);
            entity.Property(e => e.HabitDescription).HasMaxLength(255);
            entity.Property(e => e.HabitName).HasMaxLength(100);
            entity.Property(e => e.ProfileId).HasMaxLength(50);

            entity.HasOne(d => d.Profile).WithMany(p => p.Habits)
                .HasForeignKey(d => d.ProfileId)
                .HasConstraintName("FK__Habit__ProfileId__6C190EBB");
        });

        modelBuilder.Entity<Help>(entity =>
        {
            entity.HasKey(e => e.HelpId).HasName("PK__Help__90E322CEE648804F");

            entity.ToTable("Help");

            entity.Property(e => e.HelpId).HasMaxLength(50);
            entity.Property(e => e.HelpCategoryId).HasMaxLength(50);
            entity.Property(e => e.HelpCreatedAt).HasColumnType("datetime");
            entity.Property(e => e.HelpQuestion).HasMaxLength(255);

            entity.HasOne(d => d.HelpCategory).WithMany(p => p.Helps)
                .HasForeignKey(d => d.HelpCategoryId)
                .HasConstraintName("FK__Help__HelpCatego__06CD04F7");
        });

        modelBuilder.Entity<HelpCategory>(entity =>
        {
            entity.HasKey(e => e.HelpCategoryId).HasName("PK__HelpCate__83EECC2BCD8E4824");

            entity.ToTable("HelpCategory");

            entity.Property(e => e.HelpCategoryId).HasMaxLength(50);
            entity.Property(e => e.HelpCategoryName).HasMaxLength(100);
        });

        modelBuilder.Entity<MoodJournal>(entity =>
        {
            entity.HasKey(e => e.MoodJournalId).HasName("PK__MoodJour__21FB5E6269A57211");

            entity.ToTable("MoodJournal");

            entity.Property(e => e.MoodJournalId).HasMaxLength(50);
            entity.Property(e => e.MoodJournalCreatedAt).HasColumnType("datetime");
            entity.Property(e => e.MoodJournalDescription).HasMaxLength(255);
            entity.Property(e => e.MoodJournalEmotion).HasMaxLength(50);
            entity.Property(e => e.MoodJournalTitle).HasMaxLength(100);
            entity.Property(e => e.MoodJournalTypeId).HasMaxLength(50);
            entity.Property(e => e.ProfileId).HasMaxLength(50);

            entity.HasOne(d => d.MoodJournalType).WithMany(p => p.MoodJournals)
                .HasForeignKey(d => d.MoodJournalTypeId)
                .HasConstraintName("FK__MoodJourn__MoodJ__797309D9");

            entity.HasOne(d => d.Profile).WithMany(p => p.MoodJournals)
                .HasForeignKey(d => d.ProfileId)
                .HasConstraintName("FK__MoodJourn__Profi__7A672E12");
        });

        modelBuilder.Entity<MoodJournalType>(entity =>
        {
            entity.HasKey(e => e.MoodJournalTypeId).HasName("PK__MoodJour__A07686366FD5A837");

            entity.ToTable("MoodJournalType");

            entity.Property(e => e.MoodJournalTypeId).HasMaxLength(50);
            entity.Property(e => e.MoodJournalTypeName).HasMaxLength(100);
        });

        modelBuilder.Entity<Notification>(entity =>
        {
            entity.HasKey(e => e.NotificationId).HasName("PK__Notifica__20CF2E1202168E0A");

            entity.ToTable("Notification");

            entity.Property(e => e.NotificationId).HasMaxLength(50);
            entity.Property(e => e.NotificationDescription).HasMaxLength(255);
            entity.Property(e => e.NotificationName).HasMaxLength(100);
            entity.Property(e => e.NotificationUrl).HasMaxLength(255);
            entity.Property(e => e.UserId).HasMaxLength(50);

            entity.HasOne(d => d.User).WithMany(p => p.Notifications)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__Notificat__UserI__4F7CD00D");
        });

        modelBuilder.Entity<Profile>(entity =>
        {
            entity.HasKey(e => e.ProfileId).HasName("PK__Profile__290C88E48D40D9BE");

            entity.ToTable("Profile");

            entity.Property(e => e.ProfileId).HasMaxLength(50);
            entity.Property(e => e.ProfileName).HasMaxLength(255);
            entity.Property(e => e.ProfileStatus).HasMaxLength(255);
            entity.Property(e => e.UserId).HasMaxLength(50);

            entity.HasOne(d => d.User).WithMany(p => p.Profiles)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__Profile__UserId__3C69FB99");
        });

        modelBuilder.Entity<Purchase>(entity =>
        {
            entity.HasKey(e => e.PurchaseId).HasName("PK__Purchase__6B0A6BBE555E2782");

            entity.ToTable("Purchase");

            entity.Property(e => e.PurchaseId).HasMaxLength(50);
            entity.Property(e => e.SubscriptionId).HasMaxLength(50);
            entity.Property(e => e.UserId).HasMaxLength(50);

            entity.HasOne(d => d.Subscription).WithMany(p => p.Purchases)
                .HasForeignKey(d => d.SubscriptionId)
                .HasConstraintName("FK__Purchase__Subscr__49C3F6B7");

            entity.HasOne(d => d.User).WithMany(p => p.Purchases)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__Purchase__UserId__48CFD27E");
        });

        modelBuilder.Entity<Quiz>(entity =>
        {
            entity.HasKey(e => e.QuizId).HasName("PK__Quiz__8B42AE8E7EF0FD5B");

            entity.ToTable("Quiz");

            entity.Property(e => e.QuizId).HasMaxLength(50);
            entity.Property(e => e.QuizCategoryId).HasMaxLength(50);
            entity.Property(e => e.QuizCreatedAt).HasColumnType("datetime");
            entity.Property(e => e.QuizDescription).HasMaxLength(255);
            entity.Property(e => e.QuizStatus).HasMaxLength(20);
            entity.Property(e => e.QuizTitle).HasMaxLength(100);
            entity.Property(e => e.QuizUpdatedAt).HasColumnType("datetime");

            entity.HasOne(d => d.QuizCategory).WithMany(p => p.Quizzes)
                .HasForeignKey(d => d.QuizCategoryId)
                .HasConstraintName("FK__Quiz__QuizCatego__5441852A");
        });

        modelBuilder.Entity<QuizAnswerOption>(entity =>
        {
            entity.HasKey(e => e.QuizAnswerOptionId).HasName("PK__QuizAnsw__6E9E14FFBDF07BEE");

            entity.ToTable("QuizAnswerOption");

            entity.Property(e => e.QuizAnswerOptionId).HasMaxLength(50);
            entity.Property(e => e.QuestionId).HasMaxLength(50);
            entity.Property(e => e.QuizContent).HasMaxLength(255);

            entity.HasOne(d => d.Question).WithMany(p => p.QuizAnswerOptions)
                .HasForeignKey(d => d.QuestionId)
                .HasConstraintName("FK__QuizAnswe__Quest__59FA5E80");
        });

        modelBuilder.Entity<QuizCategory>(entity =>
        {
            entity.HasKey(e => e.QuizCategoryId).HasName("PK__QuizCate__60A2C1D858054549");

            entity.ToTable("QuizCategory");

            entity.Property(e => e.QuizCategoryId).HasMaxLength(50);
            entity.Property(e => e.QuizCategoryDescription).HasMaxLength(255);
            entity.Property(e => e.QuizCategoryName).HasMaxLength(100);
        });

        modelBuilder.Entity<QuizQuestion>(entity =>
        {
            entity.HasKey(e => e.QuizQuestionId).HasName("PK__QuizQues__45E34D3EC8E0BAE3");

            entity.ToTable("QuizQuestion");

            entity.Property(e => e.QuizQuestionId).HasMaxLength(50);
            entity.Property(e => e.QuizId).HasMaxLength(50);

            entity.HasOne(d => d.Quiz).WithMany(p => p.QuizQuestions)
                .HasForeignKey(d => d.QuizId)
                .HasConstraintName("FK__QuizQuest__QuizI__571DF1D5");
        });

        modelBuilder.Entity<QuizUserAnswer>(entity =>
        {
            entity.HasKey(e => e.QuizUserAnswerId).HasName("PK__QuizUser__F1FA402F50F7BF05");

            entity.ToTable("QuizUserAnswer");

            entity.Property(e => e.QuizUserAnswerId).HasMaxLength(50);
            entity.Property(e => e.ProfileId).HasMaxLength(50);
            entity.Property(e => e.QuizAnswerOptionId).HasMaxLength(50);
            entity.Property(e => e.QuizId).HasMaxLength(50);
            entity.Property(e => e.QuizQuestionId).HasMaxLength(50);
            entity.Property(e => e.QuizUserAttemptId).HasMaxLength(50);

            entity.HasOne(d => d.Profile).WithMany(p => p.QuizUserAnswers)
                .HasForeignKey(d => d.ProfileId)
                .HasConstraintName("FK__QuizUserA__Profi__68487DD7");

            entity.HasOne(d => d.QuizAnswerOption).WithMany(p => p.QuizUserAnswers)
                .HasForeignKey(d => d.QuizAnswerOptionId)
                .HasConstraintName("FK__QuizUserA__QuizA__6754599E");

            entity.HasOne(d => d.Quiz).WithMany(p => p.QuizUserAnswers)
                .HasForeignKey(d => d.QuizId)
                .HasConstraintName("FK__QuizUserA__QuizI__656C112C");

            entity.HasOne(d => d.QuizQuestion).WithMany(p => p.QuizUserAnswers)
                .HasForeignKey(d => d.QuizQuestionId)
                .HasConstraintName("FK__QuizUserA__QuizQ__66603565");

            entity.HasOne(d => d.QuizUserAttempt).WithMany(p => p.QuizUserAnswers)
                .HasForeignKey(d => d.QuizUserAttemptId)
                .HasConstraintName("FK__QuizUserA__QuizU__693CA210");
        });

        modelBuilder.Entity<QuizUserAttempt>(entity =>
        {
            entity.HasKey(e => e.QuizUserAttemptId).HasName("PK__QuizUser__6052F26008BB90FF");

            entity.ToTable("QuizUserAttempt");

            entity.Property(e => e.QuizUserAttemptId).HasMaxLength(50);
            entity.Property(e => e.ProfileId).HasMaxLength(50);
            entity.Property(e => e.QuizId).HasMaxLength(50);
            entity.Property(e => e.QuizUserAnswerCreatedAt).HasColumnType("datetime");

            entity.HasOne(d => d.Profile).WithMany(p => p.QuizUserAttempts)
                .HasForeignKey(d => d.ProfileId)
                .HasConstraintName("FK__QuizUserA__Profi__5CD6CB2B");

            entity.HasOne(d => d.Quiz).WithMany(p => p.QuizUserAttempts)
                .HasForeignKey(d => d.QuizId)
                .HasConstraintName("FK__QuizUserA__QuizI__5DCAEF64");
        });

        modelBuilder.Entity<QuizUserResult>(entity =>
        {
            entity.HasKey(e => e.QuizUserResultId).HasName("PK__QuizUser__4FDB2EB1CAD5B22C");

            entity.ToTable("QuizUserResult");

            entity.Property(e => e.QuizUserResultId).HasMaxLength(50);
            entity.Property(e => e.ProfileId).HasMaxLength(50);
            entity.Property(e => e.QuizId).HasMaxLength(50);
            entity.Property(e => e.QuizUserAttemptId).HasMaxLength(50);

            entity.HasOne(d => d.Profile).WithMany(p => p.QuizUserResults)
                .HasForeignKey(d => d.ProfileId)
                .HasConstraintName("FK__QuizUserR__Profi__628FA481");

            entity.HasOne(d => d.Quiz).WithMany(p => p.QuizUserResults)
                .HasForeignKey(d => d.QuizId)
                .HasConstraintName("FK__QuizUserR__QuizI__619B8048");

            entity.HasOne(d => d.QuizUserAttempt).WithMany(p => p.QuizUserResults)
                .HasForeignKey(d => d.QuizUserAttemptId)
                .HasConstraintName("FK__QuizUserR__QuizU__60A75C0F");
        });

        modelBuilder.Entity<RefreshToken>(entity =>
        {
            entity.HasKey(e => e.RefreshTokenId).HasName("PK__RefreshT__F5845E39057D80E7");

            entity.ToTable("RefreshToken");

            entity.Property(e => e.RefreshTokenId).HasMaxLength(50);
            entity.Property(e => e.CreatedAt).HasColumnType("datetime");
            entity.Property(e => e.ExpiresAt).HasColumnType("datetime");
            entity.Property(e => e.ProfileId).HasMaxLength(50);
            entity.Property(e => e.Token).HasMaxLength(255);
            entity.Property(e => e.UserId).HasMaxLength(50);

            entity.HasOne(d => d.Profile).WithMany(p => p.RefreshTokens)
                .HasForeignKey(d => d.ProfileId)
                .HasConstraintName("FK__RefreshTo__Profi__3F466844");

            entity.HasOne(d => d.User).WithMany(p => p.RefreshTokens)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__RefreshTo__UserI__403A8C7D");
        });

        modelBuilder.Entity<Role>(entity =>
        {
            entity.HasKey(e => e.RoleId).HasName("PK__Role__8AFACE1A8BEB7EEF");

            entity.ToTable("Role");

            entity.Property(e => e.RoleId).HasMaxLength(50);
            entity.Property(e => e.RoleName).HasMaxLength(50);
        });

        modelBuilder.Entity<Session>(entity =>
        {
            entity.HasKey(e => e.SessionId).HasName("PK__Session__C9F49290B1D67D88");

            entity.ToTable("Session");

            entity.Property(e => e.SessionId).HasMaxLength(50);
            entity.Property(e => e.ProfileId).HasMaxLength(50);
            entity.Property(e => e.Token).HasMaxLength(50);
            entity.Property(e => e.UserId).HasMaxLength(50);

            entity.HasOne(d => d.Profile).WithMany(p => p.Sessions)
                .HasForeignKey(d => d.ProfileId)
                .HasConstraintName("FK__Session__Profile__4316F928");

            entity.HasOne(d => d.User).WithMany(p => p.Sessions)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__Session__UserId__440B1D61");
        });

        modelBuilder.Entity<SubAudioCategory>(entity =>
        {
            entity.HasKey(e => e.SubAudioCategoryId).HasName("PK__SubAudio__7BA6BA6473C83A20");

            entity.ToTable("SubAudioCategory");

            entity.Property(e => e.SubAudioCategoryId).HasMaxLength(50);
            entity.Property(e => e.AudioCategoryId).HasMaxLength(50);
            entity.Property(e => e.SubAudioCategoryName).HasMaxLength(100);

            entity.HasOne(d => d.AudioCategory).WithMany(p => p.SubAudioCategories)
                .HasForeignKey(d => d.AudioCategoryId)
                .HasConstraintName("FK__SubAudioC__Audio__7F2BE32F");
        });

        modelBuilder.Entity<Subscription>(entity =>
        {
            entity.HasKey(e => e.SubscriptionId).HasName("PK__Subscrip__9A2B249D3D2BB2C1");

            entity.ToTable("Subscription");

            entity.Property(e => e.SubscriptionId).HasMaxLength(50);
            entity.Property(e => e.SubscriptionDescription).HasMaxLength(255);
            entity.Property(e => e.SubscriptionType).HasMaxLength(50);
        });

        modelBuilder.Entity<Transaction>(entity =>
        {
            entity.HasKey(e => e.TransactionId).HasName("PK__Transact__55433A6B02454C27");

            entity.ToTable("Transaction");

            entity.Property(e => e.TransactionId).HasMaxLength(50);
            entity.Property(e => e.PurchaseId).HasMaxLength(50);
            entity.Property(e => e.TransactionCode).HasMaxLength(50);
            entity.Property(e => e.TransactionCreatedAt).HasColumnType("datetime");
            entity.Property(e => e.TransactionPaymentGateway).HasMaxLength(50);
            entity.Property(e => e.TransactionStatus).HasMaxLength(50);

            entity.HasOne(d => d.Purchase).WithMany(p => p.Transactions)
                .HasForeignKey(d => d.PurchaseId)
                .HasConstraintName("FK__Transacti__Purch__4CA06362");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__User__1788CC4C3BFC7688");

            entity.ToTable("User");

            entity.Property(e => e.UserId).HasMaxLength(50);
            entity.Property(e => e.CreatedAt).HasColumnType("datetime");
            entity.Property(e => e.DateOfBirth).HasColumnType("datetime");
            entity.Property(e => e.Email).HasMaxLength(255);
            entity.Property(e => e.FullName).HasMaxLength(100);
            entity.Property(e => e.Gender).HasMaxLength(20);
            entity.Property(e => e.LastLoginDate).HasColumnType("datetime");
            entity.Property(e => e.PasswordHash).HasMaxLength(255);
            entity.Property(e => e.PhoneNumber).HasMaxLength(20);
            entity.Property(e => e.ProfilePicture).HasMaxLength(255);
            entity.Property(e => e.RoleId).HasMaxLength(50);
            entity.Property(e => e.Status).HasMaxLength(20);

            entity.HasOne(d => d.Role).WithMany(p => p.Users)
                .HasForeignKey(d => d.RoleId)
                .HasConstraintName("FK__User__RoleId__398D8EEE");
        });

        modelBuilder.Entity<UserCommunity>(entity =>
        {
            entity.HasKey(e => e.CommunityGroupId).HasName("PK__UserComm__ECEBBBC5FDA75232");

            entity.ToTable("UserCommunity");

            entity.Property(e => e.CommunityGroupId).HasMaxLength(50);
            entity.Property(e => e.CommunityCreatedAt).HasColumnType("datetime");
            entity.Property(e => e.CommunityDescription).HasMaxLength(255);
            entity.Property(e => e.CommunityName).HasMaxLength(100);
            entity.Property(e => e.CommunityStatus).HasMaxLength(20);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}